// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  username   String     @unique
  password   String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  tags       Tag[]
  events     Event[]
  categories Category[]
}

enum TagType {
  PLACE
  PERSON
  ACTIVITY
  OTHER
}

model Tag {
  id     Int            @id @default(autoincrement())
  name   String
  type   TagType        @default(OTHER)
  user   User           @relation(fields: [userId], references: [id])
  userId Int
  events TagsOnEvents[]
}

model Category {
  id     Int                  @id @default(autoincrement())
  user   User                 @relation(fields: [userId], references: [id])
  userId Int
  name   String
  events CategoriesOnEvents[]
}

enum EmotionType {
  HAPPY
  SAD
  ANGRY
  GUILT
  WORRIED
  ANXIOUS
}

model Event {
  id          Int                  @id @default(autoincrement())
  user        User                 @relation(fields: [userId], references: [id])
  userId      Int
  name        String
  description String
  positive    Boolean
  emotions    EmotionType[]
  date        DateTime
  solution    String?
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @updatedAt
  tags        TagsOnEvents[]
  categories  CategoriesOnEvents[]
}

model TagsOnEvents {
  event   Event @relation(fields: [eventId], references: [id])
  eventId Int
  tag     Tag   @relation(fields: [tagId], references: [id])
  tagId   Int

  @@id([eventId, tagId])
}

model CategoriesOnEvents {
  event      Event    @relation(fields: [eventId], references: [id])
  eventId    Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  @@id([eventId, categoryId])
}
